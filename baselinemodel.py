# -*- coding: utf-8 -*-
"""BaselineModel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w5VDt-9hf3MffVYsgoWiWK7KL25-AYdE
"""

import torch
import torch.nn as nn
import torch.optim as optim

class BaselineModel(nn.Module):
    """2 layer MLP model for classification of sell, buy, hold"""
    def __init__(self, input_dim=128*128, num_hidden=100):
        super(BaselineModel, self).__init__()
        self.fc1 = nn.Linear(input_dim, num_hidden)
        self.fc2 = nn.Linear(num_hidden, 3)
        self.relu = nn.ReLU()

    def forward(self, x):
        out = self.fc1(x)
        out = self.relu(out)
        out = self.fc2(out)
        return out

# Apply softmax to outputs to get probability